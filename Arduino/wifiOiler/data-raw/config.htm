<!DOCTYPE html><html lang="de">
<head>
	<meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
	<meta name="validator:url" content="https://validator.w3.org/nu/">
	<meta name="validator:date" content="2023-03-13">
	<title>Konfiguration</title>

	<link rel="stylesheet" href="wifiOiler.css">
	<script>
		var configVal = "";
		var line = 0;
		var theUrl="/config";
		var oldval=[];
		
		const $ = function(id){return document.getElementById(id);}
		function msgBase(msg,tpl,func){$("id_msgbox").innerHTML = msg;$("id_msgbox").appendChild($(tpl).content.cloneNode(true));$("id_msgbox").style.display = "block";$("mb_btnYes").onclick = function(){$('id_msgbox').style.display='none';if (typeof(func)=='function') func();}}
		function meldung(msg, func){msgBase(msg,"onebtn",func);}
		function frage(msg, func){msgBase(msg,"twobtn",func);$("mb_btnNo").onclick = function(){$('id_msgbox').style.display="none";}}
		function aniStart(){$('overlay').style.display = 'block';}
		function aniStop(){$('overlay').style.display = 'none';}
		function onBodyLoad(){getConfig();$("sim").addEventListener("input", calc);}
		function calc() {
       var meter = $("sim").value;
       var kmh = (meter * 3.6);
			 $("kmh").innerText = " = " + kmh.toFixed(1) + " km/h";
    }
		
    function setValues(){
			JSON.parse( configVal, function(key,value) {
				var o=$(key);
        if(o!=null) {
          if (key=="bac" && value != "") value=window.atob(value);
					o.value=value;
          oldval[key]=value;
					o.onblur = function() {check(key)}
					if (o.type!="select-one") o.onclick=function(){this.select()}}})}

		function putConfig(){
			var parms="";
			aniStart();
			JSON.parse(configVal,
        function( key, value ) {
          var o=$(key);
          if (o != null && o.value != value) {
            if (parms.length > 4) parms += "&";
            if (key=="bac") {
              parms+="bac=";
              if (o.value != "") parms += window.btoa(o.value);
            } else if (o.value != ""||key=="gts"){	// gts darf leer sein
              parms += key+"="+ o.value;
            }
          }
        });
			xmlHttp = new XMLHttpRequest();
			xmlHttp.onreadystatechange = function(){if(this.readyState==4&&this.status==200) {aniStop();window.location.href = "/";}};
			xmlHttp.open("GET", theUrl+"?"+parms, true);xmlHttp.send(null);
    }
		function getConfig(){
			aniStart();
			xmlHttp = new XMLHttpRequest();
			xmlHttp.onreadystatechange = function(){
				if (xmlHttp.readyState == 4){
					configVal = xmlHttp.responseText;setValues();calc();aniStop();}};
			xmlHttp.open("GET", theUrl, true);
			xmlHttp.send(null);}
		function resUse(){$("use").value=0;check("use");}
		function check(id){var o=$(id);if (o!=null)
		  if (o.value != oldval[id]) o.setAttribute('class', 'changed');
			else o.setAttribute('class', '');}
		</script>
	</head>

<body onload="onBodyLoad();">
<p>Ge&auml;nderte Werte werden rot hinterlegt...</p><br>

<div id="form">
<!-- Anzahl Sekunden, nach der das Notlaufprogramm starten soll, wenn kein GPS Empfang m&ouml;glich ist. -->
<label for="wts">Wartezeit Simulation</label>
<input type="number" id="wts">

<!-- Anzahl Meter (bei Pumpenmodus 'Normal'), nach der die Pumpe ausgelöst werden soll. -->
<label for="nmm">Normal Mode Meter</label>
<input type="number" id="nmm">

<!-- Anzahl Meter (bei Pumpenmodus 'Regen'), nach der die Pumpe ausgelöst werden soll. -->
<label for="rmm">Rain Mode Meter</label>
<input type="number" id="rmm">

<!-- Anzahl Meter (bei Pumpenmodus 'Offroad'), nach der die Pumpe ausgelöst werden soll. -->
<label for="omm">Offroad Mode Meter</label>
<input type="number" id="omm">

<!-- Bestimmt die angenommene Geschwindigkeit während des Notlaufprogramms (zusammen mit den Meterangaben oben den Abstand zwischen den Ölvorgängen) -->
<label>Meter/s bei Simulation</label>
<input type="number" id="sim"><div id="kmh"></div>

<label for="pac">Anzahl Pumpaktionen pro &Ouml;lvorgang</label>
<input type="number" id="pac">

<label for="glf">GPS Low-Filter (cm)</label>
<input type="number" id="glf">

<label for="otk">&Ouml;ltank Kapazit&auml;t</label>
<input type="number" id="otk">

<label for="use">...davon verbraucht</label>
<input type="number" id="use">
<button onclick="resUse();">reset</button>

<label for="ffn">Name neuer Firmware Datei</label>
<input type="text" id="ffn">

<label for="fpw">Sek. zw. GPS Trackpoints <br>(0 = no tracks)</label>
<input type="number" id="fpw">

<label for="apn">eigener Host/Access Point Name</label>
<input type="text" id="apn">

<label for="app">Access Point Passwort</label>
<input type="text" id="app">

<label for="uhn">Upload Host Name</label>
<input type="text" id="uhn">

<label for="uhp">Upload Host Port</label>
<input type="number" id="uhp">

<label for="url">Upload Host URL</label>
<input type="text" id="url">

<label for="bac">User:Password for basic authentication at oilerbase (empty for no basic auth).</label>
<input type="text" id="bac">

<label for="lgf">Logging to file?</label>
<select id="lgf" ><option value=1>Ja</option><option value=0>Nein</option></select>

<label for="lgs">Logging to Serial?</label>
<select id="lgs" ><option value=1>Ja</option><option value=0>Nein</option></select>

<label for="gdl">GPS Logging to File?</label>
<select id="gdl" ><option value=1>Ja</option><option value=0>Nein</option></select>

<label for="wso">WiFi automatisch starten?</label>
<select id="wso" ><option value=1>Ja</option><option value=0>Nein</option></select>

<label for="gts">GPS track file: Zusatz vor Dateiname (max. 10 Zeichen). Ohne Zusatz werden die Namen wie folgt gebildet: YYMMDD-HHMM.dat (vor &Auml;nderung alle Dateien herunterladen</label>
<input type="text" id="gts" maxlength="10">
</div>

<a onclick="putConfig()">Speichern</a>
<a onclick="history.back()">Abbruch</a>
<div id="overlay"><div id="overlay_content"><span id="spinner"></span></div></div>
<div id="id_msgbox"></div>
<template id="onebtn"><br><br><button id="mb_btnYes">OK</button></template>
<template id="twobtn"><br><br><button id="mb_btnYes">Ja</button><button id="mb_btnNo">Nein</button></template>
</body></html>